ARM GAS  /tmp/cctDnLnP.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.usart_printf,"ax",%progbits
  20              		.align	1
  21              		.global	usart_printf
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	usart_printf:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "dma.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "ist8310driver.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/cctDnLnP.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** float ist8310_mag[3];
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** void usart_printf(const char *fmt,...)
  60:Core/Src/main.c **** {
  30              		.loc 1 60 1 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 16, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 1
  34              		.loc 1 60 1 is_stmt 0 view .LVU1
  35 0000 0FB4     		push	{r0, r1, r2, r3}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 0, -16
  39              		.cfi_offset 1, -12
  40              		.cfi_offset 2, -8
  41              		.cfi_offset 3, -4
  42 0002 10B5     		push	{r4, lr}
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 24
  45              		.cfi_offset 4, -24
  46              		.cfi_offset 14, -20
  47 0004 02AA     		add	r2, sp, #8
  48 0006 52F8041B 		ldr	r1, [r2], #4
  61:Core/Src/main.c ****   static uint8_t tx_buf[256] = {0};
  49              		.loc 1 61 3 is_stmt 1 view .LVU2
  62:Core/Src/main.c ****   static va_list ap;
  50              		.loc 1 62 3 view .LVU3
  63:Core/Src/main.c ****   static uint16_t len;
  51              		.loc 1 63 3 view .LVU4
  64:Core/Src/main.c ****   va_start(ap, fmt);
ARM GAS  /tmp/cctDnLnP.s 			page 3


  52              		.loc 1 64 3 view .LVU5
  53 000a 084B     		ldr	r3, .L3
  54 000c 1A60     		str	r2, [r3]
  65:Core/Src/main.c **** 
  66:Core/Src/main.c ****   //return length of string 
  67:Core/Src/main.c ****   //返回字符串长度
  68:Core/Src/main.c ****   len = vsprintf((char *)tx_buf, fmt, ap);
  55              		.loc 1 68 3 view .LVU6
  56              		.loc 1 68 9 is_stmt 0 view .LVU7
  57 000e 084C     		ldr	r4, .L3+4
  58 0010 2046     		mov	r0, r4
  59 0012 FFF7FEFF 		bl	vsprintf
  60              	.LVL1:
  61              		.loc 1 68 7 view .LVU8
  62 0016 82B2     		uxth	r2, r0
  63 0018 064B     		ldr	r3, .L3+8
  64 001a 1A80     		strh	r2, [r3]	@ movhi
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   va_end(ap);
  65              		.loc 1 70 3 is_stmt 1 view .LVU9
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   HAL_UART_Transmit_DMA(&huart1,tx_buf, len);
  66              		.loc 1 72 3 view .LVU10
  67 001c 2146     		mov	r1, r4
  68 001e 0648     		ldr	r0, .L3+12
  69 0020 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
  70              	.LVL2:
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** }
  71              		.loc 1 74 1 is_stmt 0 view .LVU11
  72 0024 BDE81040 		pop	{r4, lr}
  73              	.LCFI2:
  74              		.cfi_restore 14
  75              		.cfi_restore 4
  76              		.cfi_def_cfa_offset 16
  77 0028 04B0     		add	sp, sp, #16
  78              	.LCFI3:
  79              		.cfi_restore 3
  80              		.cfi_restore 2
  81              		.cfi_restore 1
  82              		.cfi_restore 0
  83              		.cfi_def_cfa_offset 0
  84 002a 7047     		bx	lr
  85              	.L4:
  86              		.align	2
  87              	.L3:
  88 002c 00000000 		.word	.LANCHOR0
  89 0030 00000000 		.word	.LANCHOR1
  90 0034 00000000 		.word	.LANCHOR2
  91 0038 00000000 		.word	huart1
  92              		.cfi_endproc
  93              	.LFE133:
  95              		.section	.text.Error_Handler,"ax",%progbits
  96              		.align	1
  97              		.global	Error_Handler
  98              		.syntax unified
  99              		.thumb
ARM GAS  /tmp/cctDnLnP.s 			page 4


 100              		.thumb_func
 102              	Error_Handler:
 103              	.LFB136:
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****   * @brief  The application entry point.
  79:Core/Src/main.c ****   * @retval int
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c **** int main(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  90:Core/Src/main.c ****   HAL_Init();
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Configure the system clock */
  97:Core/Src/main.c ****   SystemClock_Config();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Initialize all configured peripherals */
 104:Core/Src/main.c ****   MX_GPIO_Init();
 105:Core/Src/main.c ****   MX_DMA_Init();
 106:Core/Src/main.c ****   MX_I2C3_Init();
 107:Core/Src/main.c ****   MX_USART1_UART_Init();
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 109:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart1, UART_IT_RXNE);  //receive interrupt
 110:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart1, UART_IT_IDLE);  //idle interrupt
 111:Core/Src/main.c ****   ist8310_init();
 112:Core/Src/main.c ****   /* USER CODE END 2 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Infinite loop */
 115:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 116:Core/Src/main.c ****   while (1)
 117:Core/Src/main.c ****   {
 118:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_R_GPIO_Port, LED_R_Pin, GPIO_PIN_SET);
 119:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_G_GPIO_Port, LED_G_Pin, GPIO_PIN_SET);
 120:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_B_GPIO_Port, LED_B_Pin, GPIO_PIN_SET);
 121:Core/Src/main.c ****     HAL_Delay(500);
 122:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_R_GPIO_Port, LED_R_Pin, GPIO_PIN_RESET);
 123:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_G_GPIO_Port, LED_G_Pin, GPIO_PIN_RESET);
 124:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_B_GPIO_Port, LED_B_Pin, GPIO_PIN_RESET);
 125:Core/Src/main.c ****     HAL_Delay(500);
 126:Core/Src/main.c ****     /* USER CODE END WHILE */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
ARM GAS  /tmp/cctDnLnP.s 			page 5


 129:Core/Src/main.c ****     usart_printf("X:%d,y:%d,z:%d\r\n",(int)(ist8310_mag[0]*100),(int)(ist8310_mag[1]*100),(int)(ist
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c ****   /* USER CODE END 3 */
 132:Core/Src/main.c **** }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c ****   * @brief System Clock Configuration
 136:Core/Src/main.c ****   * @retval None
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c **** void SystemClock_Config(void)
 139:Core/Src/main.c **** {
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 144:Core/Src/main.c ****   */
 145:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 149:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 160:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 161:Core/Src/main.c ****   {
 162:Core/Src/main.c ****     Error_Handler();
 163:Core/Src/main.c ****   }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 168:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /* USER CODE END 4 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  /tmp/cctDnLnP.s 			page 6


 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** void Error_Handler(void)
 189:Core/Src/main.c **** {
 104              		.loc 1 189 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ Volatile: function does not return.
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 190:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 191:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 192:Core/Src/main.c ****   __disable_irq();
 110              		.loc 1 192 3 view .LVU13
 111              	.LBB4:
 112              	.LBI4:
 113              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  /tmp/cctDnLnP.s 			page 7


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/cctDnLnP.s 			page 8


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 114              		.loc 2 140 27 view .LVU14
 115              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 116              		.loc 2 142 3 view .LVU15
 117              		.syntax unified
 118              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 119 0000 72B6     		cpsid i
 120              	@ 0 "" 2
 121              		.thumb
 122              		.syntax unified
 123              	.L6:
 124              	.LBE5:
 125              	.LBE4:
ARM GAS  /tmp/cctDnLnP.s 			page 9


 193:Core/Src/main.c ****   while (1)
 126              		.loc 1 193 3 discriminator 1 view .LVU16
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****   }
 127              		.loc 1 195 3 discriminator 1 view .LVU17
 193:Core/Src/main.c ****   while (1)
 128              		.loc 1 193 9 discriminator 1 view .LVU18
 129 0002 FEE7     		b	.L6
 130              		.cfi_endproc
 131              	.LFE136:
 133              		.section	.text.SystemClock_Config,"ax",%progbits
 134              		.align	1
 135              		.global	SystemClock_Config
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	SystemClock_Config:
 141              	.LFB135:
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 142              		.loc 1 139 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 80
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 00B5     		push	{lr}
 147              	.LCFI4:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 14, -4
 150 0002 95B0     		sub	sp, sp, #84
 151              	.LCFI5:
 152              		.cfi_def_cfa_offset 88
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 153              		.loc 1 140 3 view .LVU20
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 154              		.loc 1 140 22 is_stmt 0 view .LVU21
 155 0004 3022     		movs	r2, #48
 156 0006 0021     		movs	r1, #0
 157 0008 08A8     		add	r0, sp, #32
 158 000a FFF7FEFF 		bl	memset
 159              	.LVL3:
 141:Core/Src/main.c **** 
 160              		.loc 1 141 3 is_stmt 1 view .LVU22
 141:Core/Src/main.c **** 
 161              		.loc 1 141 22 is_stmt 0 view .LVU23
 162 000e 0023     		movs	r3, #0
 163 0010 0393     		str	r3, [sp, #12]
 164 0012 0493     		str	r3, [sp, #16]
 165 0014 0593     		str	r3, [sp, #20]
 166 0016 0693     		str	r3, [sp, #24]
 167 0018 0793     		str	r3, [sp, #28]
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 168              		.loc 1 145 3 is_stmt 1 view .LVU24
 169              	.LBB6:
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 170              		.loc 1 145 3 view .LVU25
 171 001a 0193     		str	r3, [sp, #4]
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 172              		.loc 1 145 3 view .LVU26
ARM GAS  /tmp/cctDnLnP.s 			page 10


 173 001c 1F4A     		ldr	r2, .L13
 174 001e 116C     		ldr	r1, [r2, #64]
 175 0020 41F08051 		orr	r1, r1, #268435456
 176 0024 1164     		str	r1, [r2, #64]
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 177              		.loc 1 145 3 view .LVU27
 178 0026 126C     		ldr	r2, [r2, #64]
 179 0028 02F08052 		and	r2, r2, #268435456
 180 002c 0192     		str	r2, [sp, #4]
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 181              		.loc 1 145 3 view .LVU28
 182 002e 019A     		ldr	r2, [sp, #4]
 183              	.LBE6:
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 184              		.loc 1 145 3 view .LVU29
 146:Core/Src/main.c **** 
 185              		.loc 1 146 3 view .LVU30
 186              	.LBB7:
 146:Core/Src/main.c **** 
 187              		.loc 1 146 3 view .LVU31
 188 0030 0293     		str	r3, [sp, #8]
 146:Core/Src/main.c **** 
 189              		.loc 1 146 3 view .LVU32
 190 0032 1B4A     		ldr	r2, .L13+4
 191 0034 1168     		ldr	r1, [r2]
 192 0036 41F48041 		orr	r1, r1, #16384
 193 003a 1160     		str	r1, [r2]
 146:Core/Src/main.c **** 
 194              		.loc 1 146 3 view .LVU33
 195 003c 1268     		ldr	r2, [r2]
 196 003e 02F48042 		and	r2, r2, #16384
 197 0042 0292     		str	r2, [sp, #8]
 146:Core/Src/main.c **** 
 198              		.loc 1 146 3 view .LVU34
 199 0044 029A     		ldr	r2, [sp, #8]
 200              	.LBE7:
 146:Core/Src/main.c **** 
 201              		.loc 1 146 3 view .LVU35
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 202              		.loc 1 151 3 view .LVU36
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 203              		.loc 1 151 36 is_stmt 0 view .LVU37
 204 0046 0222     		movs	r2, #2
 205 0048 0892     		str	r2, [sp, #32]
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 206              		.loc 1 152 3 is_stmt 1 view .LVU38
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 207              		.loc 1 152 30 is_stmt 0 view .LVU39
 208 004a 0121     		movs	r1, #1
 209 004c 0B91     		str	r1, [sp, #44]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 210              		.loc 1 153 3 is_stmt 1 view .LVU40
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 211              		.loc 1 153 41 is_stmt 0 view .LVU41
 212 004e 1021     		movs	r1, #16
 213 0050 0C91     		str	r1, [sp, #48]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
ARM GAS  /tmp/cctDnLnP.s 			page 11


 214              		.loc 1 154 3 is_stmt 1 view .LVU42
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 215              		.loc 1 154 34 is_stmt 0 view .LVU43
 216 0052 0E92     		str	r2, [sp, #56]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 217              		.loc 1 155 3 is_stmt 1 view .LVU44
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 218              		.loc 1 155 35 is_stmt 0 view .LVU45
 219 0054 0F93     		str	r3, [sp, #60]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 220              		.loc 1 156 3 is_stmt 1 view .LVU46
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 221              		.loc 1 156 30 is_stmt 0 view .LVU47
 222 0056 0823     		movs	r3, #8
 223 0058 1093     		str	r3, [sp, #64]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 224              		.loc 1 157 3 is_stmt 1 view .LVU48
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 225              		.loc 1 157 30 is_stmt 0 view .LVU49
 226 005a A823     		movs	r3, #168
 227 005c 1193     		str	r3, [sp, #68]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 228              		.loc 1 158 3 is_stmt 1 view .LVU50
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 229              		.loc 1 158 30 is_stmt 0 view .LVU51
 230 005e 1292     		str	r2, [sp, #72]
 159:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 231              		.loc 1 159 3 is_stmt 1 view .LVU52
 159:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 232              		.loc 1 159 30 is_stmt 0 view .LVU53
 233 0060 0423     		movs	r3, #4
 234 0062 1393     		str	r3, [sp, #76]
 160:Core/Src/main.c ****   {
 235              		.loc 1 160 3 is_stmt 1 view .LVU54
 160:Core/Src/main.c ****   {
 236              		.loc 1 160 7 is_stmt 0 view .LVU55
 237 0064 08A8     		add	r0, sp, #32
 238 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 239              	.LVL4:
 160:Core/Src/main.c ****   {
 240              		.loc 1 160 6 view .LVU56
 241 006a 98B9     		cbnz	r0, .L11
 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 242              		.loc 1 167 3 is_stmt 1 view .LVU57
 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 243              		.loc 1 167 31 is_stmt 0 view .LVU58
 244 006c 0F23     		movs	r3, #15
 245 006e 0393     		str	r3, [sp, #12]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 246              		.loc 1 169 3 is_stmt 1 view .LVU59
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 247              		.loc 1 169 34 is_stmt 0 view .LVU60
 248 0070 0223     		movs	r3, #2
 249 0072 0493     		str	r3, [sp, #16]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 250              		.loc 1 170 3 is_stmt 1 view .LVU61
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
ARM GAS  /tmp/cctDnLnP.s 			page 12


 251              		.loc 1 170 35 is_stmt 0 view .LVU62
 252 0074 0023     		movs	r3, #0
 253 0076 0593     		str	r3, [sp, #20]
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 254              		.loc 1 171 3 is_stmt 1 view .LVU63
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 255              		.loc 1 171 36 is_stmt 0 view .LVU64
 256 0078 4FF4A053 		mov	r3, #5120
 257 007c 0693     		str	r3, [sp, #24]
 172:Core/Src/main.c **** 
 258              		.loc 1 172 3 is_stmt 1 view .LVU65
 172:Core/Src/main.c **** 
 259              		.loc 1 172 36 is_stmt 0 view .LVU66
 260 007e 4FF48053 		mov	r3, #4096
 261 0082 0793     		str	r3, [sp, #28]
 174:Core/Src/main.c ****   {
 262              		.loc 1 174 3 is_stmt 1 view .LVU67
 174:Core/Src/main.c ****   {
 263              		.loc 1 174 7 is_stmt 0 view .LVU68
 264 0084 0521     		movs	r1, #5
 265 0086 03A8     		add	r0, sp, #12
 266 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 267              	.LVL5:
 174:Core/Src/main.c ****   {
 268              		.loc 1 174 6 view .LVU69
 269 008c 20B9     		cbnz	r0, .L12
 178:Core/Src/main.c **** 
 270              		.loc 1 178 1 view .LVU70
 271 008e 15B0     		add	sp, sp, #84
 272              	.LCFI6:
 273              		.cfi_remember_state
 274              		.cfi_def_cfa_offset 4
 275              		@ sp needed
 276 0090 5DF804FB 		ldr	pc, [sp], #4
 277              	.L11:
 278              	.LCFI7:
 279              		.cfi_restore_state
 162:Core/Src/main.c ****   }
 280              		.loc 1 162 5 is_stmt 1 view .LVU71
 281 0094 FFF7FEFF 		bl	Error_Handler
 282              	.LVL6:
 283              	.L12:
 176:Core/Src/main.c ****   }
 284              		.loc 1 176 5 view .LVU72
 285 0098 FFF7FEFF 		bl	Error_Handler
 286              	.LVL7:
 287              	.L14:
 288              		.align	2
 289              	.L13:
 290 009c 00380240 		.word	1073887232
 291 00a0 00700040 		.word	1073770496
 292              		.cfi_endproc
 293              	.LFE135:
 295              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 296              		.align	2
 297              	.LC0:
 298 0000 583A2564 		.ascii	"X:%d,y:%d,z:%d\015\012\000"
ARM GAS  /tmp/cctDnLnP.s 			page 13


 298      2C793A25 
 298      642C7A3A 
 298      25640D0A 
 298      00
 299              		.section	.text.main,"ax",%progbits
 300              		.align	1
 301              		.global	main
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 306              	main:
 307              	.LFB134:
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 308              		.loc 1 82 1 view -0
 309              		.cfi_startproc
 310              		@ Volatile: function does not return.
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 08B5     		push	{r3, lr}
 314              	.LCFI8:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 3, -8
 317              		.cfi_offset 14, -4
  90:Core/Src/main.c **** 
 318              		.loc 1 90 3 view .LVU74
 319 0002 FFF7FEFF 		bl	HAL_Init
 320              	.LVL8:
  97:Core/Src/main.c **** 
 321              		.loc 1 97 3 view .LVU75
 322 0006 FFF7FEFF 		bl	SystemClock_Config
 323              	.LVL9:
 104:Core/Src/main.c ****   MX_DMA_Init();
 324              		.loc 1 104 3 view .LVU76
 325 000a FFF7FEFF 		bl	MX_GPIO_Init
 326              	.LVL10:
 105:Core/Src/main.c ****   MX_I2C3_Init();
 327              		.loc 1 105 3 view .LVU77
 328 000e FFF7FEFF 		bl	MX_DMA_Init
 329              	.LVL11:
 106:Core/Src/main.c ****   MX_USART1_UART_Init();
 330              		.loc 1 106 3 view .LVU78
 331 0012 FFF7FEFF 		bl	MX_I2C3_Init
 332              	.LVL12:
 107:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 333              		.loc 1 107 3 view .LVU79
 334 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 335              	.LVL13:
 109:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart1, UART_IT_IDLE);  //idle interrupt
 336              		.loc 1 109 3 view .LVU80
 337 001a 2C4B     		ldr	r3, .L18
 338 001c 1B68     		ldr	r3, [r3]
 339 001e DA68     		ldr	r2, [r3, #12]
 340 0020 42F02002 		orr	r2, r2, #32
 341 0024 DA60     		str	r2, [r3, #12]
 110:Core/Src/main.c ****   ist8310_init();
 342              		.loc 1 110 3 view .LVU81
 343 0026 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/cctDnLnP.s 			page 14


 344 0028 42F01002 		orr	r2, r2, #16
 345 002c DA60     		str	r2, [r3, #12]
 111:Core/Src/main.c ****   /* USER CODE END 2 */
 346              		.loc 1 111 3 view .LVU82
 347 002e FFF7FEFF 		bl	ist8310_init
 348              	.LVL14:
 349              	.L16:
 116:Core/Src/main.c ****   {
 350              		.loc 1 116 3 discriminator 1 view .LVU83
 118:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_G_GPIO_Port, LED_G_Pin, GPIO_PIN_SET);
 351              		.loc 1 118 5 discriminator 1 view .LVU84
 352 0032 274C     		ldr	r4, .L18+4
 353 0034 0122     		movs	r2, #1
 354 0036 4FF48051 		mov	r1, #4096
 355 003a 2046     		mov	r0, r4
 356 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 357              	.LVL15:
 119:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_B_GPIO_Port, LED_B_Pin, GPIO_PIN_SET);
 358              		.loc 1 119 5 discriminator 1 view .LVU85
 359 0040 0122     		movs	r2, #1
 360 0042 4FF40061 		mov	r1, #2048
 361 0046 2046     		mov	r0, r4
 362 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 363              	.LVL16:
 120:Core/Src/main.c ****     HAL_Delay(500);
 364              		.loc 1 120 5 discriminator 1 view .LVU86
 365 004c 0122     		movs	r2, #1
 366 004e 4FF48061 		mov	r1, #1024
 367 0052 2046     		mov	r0, r4
 368 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 369              	.LVL17:
 121:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_R_GPIO_Port, LED_R_Pin, GPIO_PIN_RESET);
 370              		.loc 1 121 5 discriminator 1 view .LVU87
 371 0058 4FF4FA70 		mov	r0, #500
 372 005c FFF7FEFF 		bl	HAL_Delay
 373              	.LVL18:
 122:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_G_GPIO_Port, LED_G_Pin, GPIO_PIN_RESET);
 374              		.loc 1 122 5 discriminator 1 view .LVU88
 375 0060 0022     		movs	r2, #0
 376 0062 4FF48051 		mov	r1, #4096
 377 0066 2046     		mov	r0, r4
 378 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 379              	.LVL19:
 123:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_B_GPIO_Port, LED_B_Pin, GPIO_PIN_RESET);
 380              		.loc 1 123 5 discriminator 1 view .LVU89
 381 006c 0022     		movs	r2, #0
 382 006e 4FF40061 		mov	r1, #2048
 383 0072 2046     		mov	r0, r4
 384 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 385              	.LVL20:
 124:Core/Src/main.c ****     HAL_Delay(500);
 386              		.loc 1 124 5 discriminator 1 view .LVU90
 387 0078 0022     		movs	r2, #0
 388 007a 4FF48061 		mov	r1, #1024
 389 007e 2046     		mov	r0, r4
 390 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 391              	.LVL21:
ARM GAS  /tmp/cctDnLnP.s 			page 15


 125:Core/Src/main.c ****     /* USER CODE END WHILE */
 392              		.loc 1 125 5 discriminator 1 view .LVU91
 393 0084 4FF4FA70 		mov	r0, #500
 394 0088 FFF7FEFF 		bl	HAL_Delay
 395              	.LVL22:
 129:Core/Src/main.c ****   }
 396              		.loc 1 129 5 discriminator 1 view .LVU92
 129:Core/Src/main.c ****   }
 397              		.loc 1 129 56 is_stmt 0 discriminator 1 view .LVU93
 398 008c 114B     		ldr	r3, .L18+8
 399 008e D3ED007A 		vldr.32	s15, [r3]
 129:Core/Src/main.c ****   }
 400              		.loc 1 129 59 discriminator 1 view .LVU94
 401 0092 9FED116A 		vldr.32	s12, .L18+12
 402 0096 67EE867A 		vmul.f32	s15, s15, s12
 129:Core/Src/main.c ****   }
 403              		.loc 1 129 82 discriminator 1 view .LVU95
 404 009a 93ED017A 		vldr.32	s14, [r3, #4]
 129:Core/Src/main.c ****   }
 405              		.loc 1 129 85 discriminator 1 view .LVU96
 406 009e 27EE067A 		vmul.f32	s14, s14, s12
 129:Core/Src/main.c ****   }
 407              		.loc 1 129 108 discriminator 1 view .LVU97
 408 00a2 D3ED026A 		vldr.32	s13, [r3, #8]
 129:Core/Src/main.c ****   }
 409              		.loc 1 129 111 discriminator 1 view .LVU98
 410 00a6 66EE866A 		vmul.f32	s13, s13, s12
 129:Core/Src/main.c ****   }
 411              		.loc 1 129 5 discriminator 1 view .LVU99
 412 00aa FDEEE66A 		vcvt.s32.f32	s13, s13
 413 00ae 16EE903A 		vmov	r3, s13	@ int
 414 00b2 BDEEC77A 		vcvt.s32.f32	s14, s14
 415 00b6 17EE102A 		vmov	r2, s14	@ int
 416 00ba FDEEE77A 		vcvt.s32.f32	s15, s15
 417 00be 17EE901A 		vmov	r1, s15	@ int
 418 00c2 0648     		ldr	r0, .L18+16
 419 00c4 FFF7FEFF 		bl	usart_printf
 420              	.LVL23:
 116:Core/Src/main.c ****   {
 421              		.loc 1 116 9 is_stmt 1 discriminator 1 view .LVU100
 422 00c8 B3E7     		b	.L16
 423              	.L19:
 424 00ca 00BF     		.align	2
 425              	.L18:
 426 00cc 00000000 		.word	huart1
 427 00d0 001C0240 		.word	1073880064
 428 00d4 00000000 		.word	.LANCHOR3
 429 00d8 0000C842 		.word	1120403456
 430 00dc 00000000 		.word	.LC0
 431              		.cfi_endproc
 432              	.LFE134:
 434              		.global	ist8310_mag
 435              		.section	.bss.ap.2,"aw",%nobits
 436              		.align	2
 437              		.set	.LANCHOR0,. + 0
 440              	ap.2:
 441 0000 00000000 		.space	4
ARM GAS  /tmp/cctDnLnP.s 			page 16


 442              		.section	.bss.ist8310_mag,"aw",%nobits
 443              		.align	2
 444              		.set	.LANCHOR3,. + 0
 447              	ist8310_mag:
 448 0000 00000000 		.space	12
 448      00000000 
 448      00000000 
 449              		.section	.bss.len.0,"aw",%nobits
 450              		.align	1
 451              		.set	.LANCHOR2,. + 0
 454              	len.0:
 455 0000 0000     		.space	2
 456              		.section	.bss.tx_buf.1,"aw",%nobits
 457              		.align	2
 458              		.set	.LANCHOR1,. + 0
 461              	tx_buf.1:
 462 0000 00000000 		.space	256
 462      00000000 
 462      00000000 
 462      00000000 
 462      00000000 
 463              		.text
 464              	.Letext0:
 465              		.file 3 "/home/tianbot/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types
 466              		.file 4 "/home/tianbot/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 467              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 468              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 469              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 470              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 471              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 472              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 473              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 474              		.file 12 "/home/tianbot/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stdarg
 475              		.file 13 "/home/tianbot/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdio.h"
 476              		.file 14 "Core/Inc/main.h"
 477              		.file 15 "Core/Inc/usart.h"
 478              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 479              		.file 17 "Core/Inc/gpio.h"
 480              		.file 18 "Core/Inc/dma.h"
 481              		.file 19 "Core/Inc/i2c.h"
 482              		.file 20 "Core/Inc/ist8310driver.h"
 483              		.file 21 "<built-in>"
ARM GAS  /tmp/cctDnLnP.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cctDnLnP.s:20     .text.usart_printf:0000000000000000 $t
     /tmp/cctDnLnP.s:26     .text.usart_printf:0000000000000000 usart_printf
     /tmp/cctDnLnP.s:88     .text.usart_printf:000000000000002c $d
     /tmp/cctDnLnP.s:96     .text.Error_Handler:0000000000000000 $t
     /tmp/cctDnLnP.s:102    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cctDnLnP.s:134    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cctDnLnP.s:140    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cctDnLnP.s:290    .text.SystemClock_Config:000000000000009c $d
     /tmp/cctDnLnP.s:296    .rodata.main.str1.4:0000000000000000 $d
     /tmp/cctDnLnP.s:300    .text.main:0000000000000000 $t
     /tmp/cctDnLnP.s:306    .text.main:0000000000000000 main
     /tmp/cctDnLnP.s:426    .text.main:00000000000000cc $d
     /tmp/cctDnLnP.s:447    .bss.ist8310_mag:0000000000000000 ist8310_mag
     /tmp/cctDnLnP.s:436    .bss.ap.2:0000000000000000 $d
     /tmp/cctDnLnP.s:440    .bss.ap.2:0000000000000000 ap.2
     /tmp/cctDnLnP.s:443    .bss.ist8310_mag:0000000000000000 $d
     /tmp/cctDnLnP.s:450    .bss.len.0:0000000000000000 $d
     /tmp/cctDnLnP.s:454    .bss.len.0:0000000000000000 len.0
     /tmp/cctDnLnP.s:457    .bss.tx_buf.1:0000000000000000 $d
     /tmp/cctDnLnP.s:461    .bss.tx_buf.1:0000000000000000 tx_buf.1

UNDEFINED SYMBOLS
vsprintf
HAL_UART_Transmit_DMA
huart1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_I2C3_Init
MX_USART1_UART_Init
ist8310_init
HAL_GPIO_WritePin
HAL_Delay
