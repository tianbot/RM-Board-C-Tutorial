ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB135:
  28              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2025 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** #include "cmsis_os.h"
  25:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  26:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  27:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  28:Src/stm32f4xx_it.c **** 
  29:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 2


  31:Src/stm32f4xx_it.c **** 
  32:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  33:Src/stm32f4xx_it.c **** 
  34:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  36:Src/stm32f4xx_it.c **** 
  37:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  38:Src/stm32f4xx_it.c **** 
  39:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  43:Src/stm32f4xx_it.c **** 
  44:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  48:Src/stm32f4xx_it.c **** 
  49:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  51:Src/stm32f4xx_it.c **** 
  52:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  53:Src/stm32f4xx_it.c **** 
  54:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  56:Src/stm32f4xx_it.c **** 
  57:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  58:Src/stm32f4xx_it.c **** 
  59:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan1;
  61:Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan2;
  62:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  63:Src/stm32f4xx_it.c **** 
  64:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  65:Src/stm32f4xx_it.c **** 
  66:Src/stm32f4xx_it.c **** /******************************************************************************/
  67:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  68:Src/stm32f4xx_it.c **** /******************************************************************************/
  69:Src/stm32f4xx_it.c **** /**
  70:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Src/stm32f4xx_it.c ****   */
  72:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  73:Src/stm32f4xx_it.c **** {
  29              		.loc 1 73 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  74:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Src/stm32f4xx_it.c **** 
  76:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Src/stm32f4xx_it.c **** 
  79:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Src/stm32f4xx_it.c **** }
  34              		.loc 1 80 1 view .LVU1
  35 0000 7047     		bx	lr
ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 3


  36              		.cfi_endproc
  37              	.LFE135:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	HardFault_Handler:
  47              	.LFB136:
  81:Src/stm32f4xx_it.c **** 
  82:Src/stm32f4xx_it.c **** /**
  83:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Src/stm32f4xx_it.c ****   */
  85:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  86:Src/stm32f4xx_it.c **** {
  48              		.loc 1 86 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  87:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Src/stm32f4xx_it.c **** 
  89:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Src/stm32f4xx_it.c ****   while (1)
  55              		.loc 1 90 3 discriminator 1 view .LVU3
  91:Src/stm32f4xx_it.c ****   {
  92:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Src/stm32f4xx_it.c ****   }
  56              		.loc 1 94 3 discriminator 1 view .LVU4
  90:Src/stm32f4xx_it.c ****   {
  57              		.loc 1 90 9 discriminator 1 view .LVU5
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE136:
  62              		.section	.text.MemManage_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	MemManage_Handler
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	MemManage_Handler:
  70              	.LFB137:
  95:Src/stm32f4xx_it.c **** }
  96:Src/stm32f4xx_it.c **** 
  97:Src/stm32f4xx_it.c **** /**
  98:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
  99:Src/stm32f4xx_it.c ****   */
 100:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 101:Src/stm32f4xx_it.c **** {
  71              		.loc 1 101 1 view -0
  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
  74              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 4


  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.L5:
 102:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Src/stm32f4xx_it.c **** 
 104:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Src/stm32f4xx_it.c ****   while (1)
  78              		.loc 1 105 3 discriminator 1 view .LVU7
 106:Src/stm32f4xx_it.c ****   {
 107:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f4xx_it.c ****   }
  79              		.loc 1 109 3 discriminator 1 view .LVU8
 105:Src/stm32f4xx_it.c ****   {
  80              		.loc 1 105 9 discriminator 1 view .LVU9
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE137:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  92              	BusFault_Handler:
  93              	.LFB138:
 110:Src/stm32f4xx_it.c **** }
 111:Src/stm32f4xx_it.c **** 
 112:Src/stm32f4xx_it.c **** /**
 113:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 114:Src/stm32f4xx_it.c ****   */
 115:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 116:Src/stm32f4xx_it.c **** {
  94              		.loc 1 116 1 view -0
  95              		.cfi_startproc
  96              		@ Volatile: function does not return.
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100              	.L7:
 117:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Src/stm32f4xx_it.c **** 
 119:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Src/stm32f4xx_it.c ****   while (1)
 101              		.loc 1 120 3 discriminator 1 view .LVU11
 121:Src/stm32f4xx_it.c ****   {
 122:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Src/stm32f4xx_it.c ****   }
 102              		.loc 1 124 3 discriminator 1 view .LVU12
 120:Src/stm32f4xx_it.c ****   {
 103              		.loc 1 120 9 discriminator 1 view .LVU13
 104 0000 FEE7     		b	.L7
 105              		.cfi_endproc
 106              	.LFE138:
 108              		.section	.text.UsageFault_Handler,"ax",%progbits
 109              		.align	1
ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 5


 110              		.global	UsageFault_Handler
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 115              	UsageFault_Handler:
 116              	.LFB139:
 125:Src/stm32f4xx_it.c **** }
 126:Src/stm32f4xx_it.c **** 
 127:Src/stm32f4xx_it.c **** /**
 128:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Src/stm32f4xx_it.c ****   */
 130:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 131:Src/stm32f4xx_it.c **** {
 117              		.loc 1 131 1 view -0
 118              		.cfi_startproc
 119              		@ Volatile: function does not return.
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.L9:
 132:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Src/stm32f4xx_it.c **** 
 134:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Src/stm32f4xx_it.c ****   while (1)
 124              		.loc 1 135 3 discriminator 1 view .LVU15
 136:Src/stm32f4xx_it.c ****   {
 137:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Src/stm32f4xx_it.c ****   }
 125              		.loc 1 139 3 discriminator 1 view .LVU16
 135:Src/stm32f4xx_it.c ****   {
 126              		.loc 1 135 9 discriminator 1 view .LVU17
 127 0000 FEE7     		b	.L9
 128              		.cfi_endproc
 129              	.LFE139:
 131              		.section	.text.DebugMon_Handler,"ax",%progbits
 132              		.align	1
 133              		.global	DebugMon_Handler
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	DebugMon_Handler:
 139              	.LFB140:
 140:Src/stm32f4xx_it.c **** }
 141:Src/stm32f4xx_it.c **** 
 142:Src/stm32f4xx_it.c **** /**
 143:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 144:Src/stm32f4xx_it.c ****   */
 145:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 146:Src/stm32f4xx_it.c **** {
 140              		.loc 1 146 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 147:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 148:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 6


 149:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 150:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 153:Src/stm32f4xx_it.c **** }
 145              		.loc 1 153 1 view .LVU19
 146 0000 7047     		bx	lr
 147              		.cfi_endproc
 148              	.LFE140:
 150              		.section	.text.SysTick_Handler,"ax",%progbits
 151              		.align	1
 152              		.global	SysTick_Handler
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	SysTick_Handler:
 158              	.LFB141:
 154:Src/stm32f4xx_it.c **** 
 155:Src/stm32f4xx_it.c **** /**
 156:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 157:Src/stm32f4xx_it.c ****   */
 158:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 159:Src/stm32f4xx_it.c **** {
 159              		.loc 1 159 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163 0000 08B5     		push	{r3, lr}
 164              	.LCFI0:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 3, -8
 167              		.cfi_offset 14, -4
 160:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 163:Src/stm32f4xx_it.c ****   HAL_IncTick();
 168              		.loc 1 163 3 view .LVU21
 169 0002 FFF7FEFF 		bl	HAL_IncTick
 170              	.LVL0:
 164:Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 165:Src/stm32f4xx_it.c ****   if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 171              		.loc 1 165 3 view .LVU22
 172              		.loc 1 165 7 is_stmt 0 view .LVU23
 173 0006 FFF7FEFF 		bl	xTaskGetSchedulerState
 174              	.LVL1:
 175              		.loc 1 165 6 view .LVU24
 176 000a 0128     		cmp	r0, #1
 177 000c 00D1     		bne	.L14
 178              	.L11:
 166:Src/stm32f4xx_it.c ****   {
 167:Src/stm32f4xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 168:Src/stm32f4xx_it.c ****   xPortSysTickHandler();
 169:Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 170:Src/stm32f4xx_it.c ****   }
 171:Src/stm32f4xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 172:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 173:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 7


 174:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 175:Src/stm32f4xx_it.c **** }
 179              		.loc 1 175 1 view .LVU25
 180 000e 08BD     		pop	{r3, pc}
 181              	.L14:
 182              	.LBB2:
 168:Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 183              		.loc 1 168 3 is_stmt 1 view .LVU26
 184 0010 FFF7FEFF 		bl	xPortSysTickHandler
 185              	.LVL2:
 186              	.LBE2:
 187              		.loc 1 175 1 is_stmt 0 view .LVU27
 188 0014 FBE7     		b	.L11
 189              		.cfi_endproc
 190              	.LFE141:
 192              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 193              		.align	1
 194              		.global	EXTI0_IRQHandler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	EXTI0_IRQHandler:
 200              	.LFB142:
 176:Src/stm32f4xx_it.c **** 
 177:Src/stm32f4xx_it.c **** /******************************************************************************/
 178:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 179:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 180:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 181:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 182:Src/stm32f4xx_it.c **** /******************************************************************************/
 183:Src/stm32f4xx_it.c **** 
 184:Src/stm32f4xx_it.c **** /**
 185:Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line0 interrupt.
 186:Src/stm32f4xx_it.c ****   */
 187:Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(void)
 188:Src/stm32f4xx_it.c **** {
 201              		.loc 1 188 1 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI1:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 189:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 190:Src/stm32f4xx_it.c **** 
 191:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
 192:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 210              		.loc 1 192 3 view .LVU29
 211 0002 0120     		movs	r0, #1
 212 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 213              	.LVL3:
 193:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 194:Src/stm32f4xx_it.c **** 
 195:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
 196:Src/stm32f4xx_it.c **** }
ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 8


 214              		.loc 1 196 1 is_stmt 0 view .LVU30
 215 0008 08BD     		pop	{r3, pc}
 216              		.cfi_endproc
 217              	.LFE142:
 219              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 220              		.align	1
 221              		.global	EXTI3_IRQHandler
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	EXTI3_IRQHandler:
 227              	.LFB143:
 197:Src/stm32f4xx_it.c **** 
 198:Src/stm32f4xx_it.c **** /**
 199:Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line3 interrupt.
 200:Src/stm32f4xx_it.c ****   */
 201:Src/stm32f4xx_it.c **** void EXTI3_IRQHandler(void)
 202:Src/stm32f4xx_it.c **** {
 228              		.loc 1 202 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI2:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 203:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 204:Src/stm32f4xx_it.c **** 
 205:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 206:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 237              		.loc 1 206 3 view .LVU32
 238 0002 0820     		movs	r0, #8
 239 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 240              	.LVL4:
 207:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 208:Src/stm32f4xx_it.c **** 
 209:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 210:Src/stm32f4xx_it.c **** }
 241              		.loc 1 210 1 is_stmt 0 view .LVU33
 242 0008 08BD     		pop	{r3, pc}
 243              		.cfi_endproc
 244              	.LFE143:
 246              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 247              		.align	1
 248              		.global	EXTI4_IRQHandler
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	EXTI4_IRQHandler:
 254              	.LFB144:
 211:Src/stm32f4xx_it.c **** 
 212:Src/stm32f4xx_it.c **** /**
 213:Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line4 interrupt.
 214:Src/stm32f4xx_it.c ****   */
 215:Src/stm32f4xx_it.c **** void EXTI4_IRQHandler(void)
 216:Src/stm32f4xx_it.c **** {
ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 9


 255              		.loc 1 216 1 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 08B5     		push	{r3, lr}
 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 217:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 218:Src/stm32f4xx_it.c **** 
 219:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 220:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 264              		.loc 1 220 3 view .LVU35
 265 0002 1020     		movs	r0, #16
 266 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 267              	.LVL5:
 221:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 222:Src/stm32f4xx_it.c **** 
 223:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 224:Src/stm32f4xx_it.c **** }
 268              		.loc 1 224 1 is_stmt 0 view .LVU36
 269 0008 08BD     		pop	{r3, pc}
 270              		.cfi_endproc
 271              	.LFE144:
 273              		.section	.text.CAN1_RX0_IRQHandler,"ax",%progbits
 274              		.align	1
 275              		.global	CAN1_RX0_IRQHandler
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	CAN1_RX0_IRQHandler:
 281              	.LFB145:
 225:Src/stm32f4xx_it.c **** 
 226:Src/stm32f4xx_it.c **** /**
 227:Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX0 interrupts.
 228:Src/stm32f4xx_it.c ****   */
 229:Src/stm32f4xx_it.c **** void CAN1_RX0_IRQHandler(void)
 230:Src/stm32f4xx_it.c **** {
 282              		.loc 1 230 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286 0000 08B5     		push	{r3, lr}
 287              	.LCFI4:
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 3, -8
 290              		.cfi_offset 14, -4
 231:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 0 */
 232:Src/stm32f4xx_it.c **** 
 233:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 0 */
 234:Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 291              		.loc 1 234 3 view .LVU38
 292 0002 0248     		ldr	r0, .L23
 293 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 294              	.LVL6:
 235:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 1 */
ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 10


 236:Src/stm32f4xx_it.c **** 
 237:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 1 */
 238:Src/stm32f4xx_it.c **** }
 295              		.loc 1 238 1 is_stmt 0 view .LVU39
 296 0008 08BD     		pop	{r3, pc}
 297              	.L24:
 298 000a 00BF     		.align	2
 299              	.L23:
 300 000c 00000000 		.word	hcan1
 301              		.cfi_endproc
 302              	.LFE145:
 304              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 305              		.align	1
 306              		.global	EXTI9_5_IRQHandler
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 311              	EXTI9_5_IRQHandler:
 312              	.LFB146:
 239:Src/stm32f4xx_it.c **** 
 240:Src/stm32f4xx_it.c **** /**
 241:Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 242:Src/stm32f4xx_it.c ****   */
 243:Src/stm32f4xx_it.c **** void EXTI9_5_IRQHandler(void)
 244:Src/stm32f4xx_it.c **** {
 313              		.loc 1 244 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI5:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
 321              		.cfi_offset 14, -4
 245:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 246:Src/stm32f4xx_it.c **** 
 247:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 248:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 322              		.loc 1 248 3 view .LVU41
 323 0002 2020     		movs	r0, #32
 324 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 325              	.LVL7:
 249:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 250:Src/stm32f4xx_it.c **** 
 251:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 252:Src/stm32f4xx_it.c **** }
 326              		.loc 1 252 1 is_stmt 0 view .LVU42
 327 0008 08BD     		pop	{r3, pc}
 328              		.cfi_endproc
 329              	.LFE146:
 331              		.section	.text.CAN2_RX0_IRQHandler,"ax",%progbits
 332              		.align	1
 333              		.global	CAN2_RX0_IRQHandler
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 338              	CAN2_RX0_IRQHandler:
ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 11


 339              	.LFB147:
 253:Src/stm32f4xx_it.c **** 
 254:Src/stm32f4xx_it.c **** /**
 255:Src/stm32f4xx_it.c ****   * @brief This function handles CAN2 RX0 interrupts.
 256:Src/stm32f4xx_it.c ****   */
 257:Src/stm32f4xx_it.c **** void CAN2_RX0_IRQHandler(void)
 258:Src/stm32f4xx_it.c **** {
 340              		.loc 1 258 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 08B5     		push	{r3, lr}
 345              	.LCFI6:
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 3, -8
 348              		.cfi_offset 14, -4
 259:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX0_IRQn 0 */
 260:Src/stm32f4xx_it.c **** 
 261:Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX0_IRQn 0 */
 262:Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan2);
 349              		.loc 1 262 3 view .LVU44
 350 0002 0248     		ldr	r0, .L29
 351 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 352              	.LVL8:
 263:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX0_IRQn 1 */
 264:Src/stm32f4xx_it.c **** 
 265:Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX0_IRQn 1 */
 266:Src/stm32f4xx_it.c **** }
 353              		.loc 1 266 1 is_stmt 0 view .LVU45
 354 0008 08BD     		pop	{r3, pc}
 355              	.L30:
 356 000a 00BF     		.align	2
 357              	.L29:
 358 000c 00000000 		.word	hcan2
 359              		.cfi_endproc
 360              	.LFE147:
 362              		.text
 363              	.Letext0:
 364              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 365              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 366              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 367              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 368              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 369              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 370              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 371              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 372              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:20     .text.NMI_Handler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:40     .text.HardFault_Handler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:63     .text.MemManage_Handler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:69     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:86     .text.BusFault_Handler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:92     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:109    .text.UsageFault_Handler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:115    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:132    .text.DebugMon_Handler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:138    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:151    .text.SysTick_Handler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:157    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:193    .text.EXTI0_IRQHandler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:199    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:220    .text.EXTI3_IRQHandler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:226    .text.EXTI3_IRQHandler:00000000 EXTI3_IRQHandler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:247    .text.EXTI4_IRQHandler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:253    .text.EXTI4_IRQHandler:00000000 EXTI4_IRQHandler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:274    .text.CAN1_RX0_IRQHandler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:280    .text.CAN1_RX0_IRQHandler:00000000 CAN1_RX0_IRQHandler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:300    .text.CAN1_RX0_IRQHandler:0000000c $d
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:305    .text.EXTI9_5_IRQHandler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:311    .text.EXTI9_5_IRQHandler:00000000 EXTI9_5_IRQHandler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:332    .text.CAN2_RX0_IRQHandler:00000000 $t
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:338    .text.CAN2_RX0_IRQHandler:00000000 CAN2_RX0_IRQHandler
C:\Users\xixi\AppData\Local\Temp\ccSirgWd.s:358    .text.CAN2_RX0_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
xTaskGetSchedulerState
xPortSysTickHandler
HAL_GPIO_EXTI_IRQHandler
HAL_CAN_IRQHandler
hcan1
hcan2
