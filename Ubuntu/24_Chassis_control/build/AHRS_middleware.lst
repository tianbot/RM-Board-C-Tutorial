ARM GAS  /tmp/cc3Ew2Em.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"AHRS_middleware.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.AHRS_get_height,"ax",%progbits
  20              		.align	1
  21              		.global	AHRS_get_height
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	AHRS_get_height:
  27              	.LVL0:
  28              	.LFB163:
  29              		.file 1 "algorithm/AHRS_middleware.c"
   1:algorithm/AHRS_middleware.c **** /**
   2:algorithm/AHRS_middleware.c ****   ****************************(C) COPYRIGHT 2019 DJI****************************
   3:algorithm/AHRS_middleware.c ****   * @file       AHRS_MiddleWare.c/h
   4:algorithm/AHRS_middleware.c ****   * @brief      姿态解算中间层，为姿态解算提供相关函数
   5:algorithm/AHRS_middleware.c ****   * @note
   6:algorithm/AHRS_middleware.c ****   * @history
   7:algorithm/AHRS_middleware.c ****   *  Version    Date            Author          Modification
   8:algorithm/AHRS_middleware.c ****   *  V1.0.0     Dec-26-2018     RM              1. 完成
   9:algorithm/AHRS_middleware.c ****   *
  10:algorithm/AHRS_middleware.c ****   @verbatim
  11:algorithm/AHRS_middleware.c ****   ==============================================================================
  12:algorithm/AHRS_middleware.c **** 
  13:algorithm/AHRS_middleware.c ****   ==============================================================================
  14:algorithm/AHRS_middleware.c ****   @endverbatim
  15:algorithm/AHRS_middleware.c ****   ****************************(C) COPYRIGHT 2019 DJI****************************
  16:algorithm/AHRS_middleware.c ****   */
  17:algorithm/AHRS_middleware.c **** 
  18:algorithm/AHRS_middleware.c **** #include "AHRS_middleware.h"
  19:algorithm/AHRS_middleware.c **** #include "AHRS.h"
  20:algorithm/AHRS_middleware.c **** #include "arm_math.h"
  21:algorithm/AHRS_middleware.c **** #include "main.h"
  22:algorithm/AHRS_middleware.c **** /**
  23:algorithm/AHRS_middleware.c ****  * @brief          用于获取当前高度
  24:algorithm/AHRS_middleware.c ****  * @author         RM
  25:algorithm/AHRS_middleware.c ****  * @param[in]      高度的指针，fp32
  26:algorithm/AHRS_middleware.c ****  * @retval         返回空
  27:algorithm/AHRS_middleware.c ****  */
  28:algorithm/AHRS_middleware.c **** 
  29:algorithm/AHRS_middleware.c **** void AHRS_get_height(fp32* high)
ARM GAS  /tmp/cc3Ew2Em.s 			page 2


  30:algorithm/AHRS_middleware.c **** {
  30              		.loc 1 30 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  31:algorithm/AHRS_middleware.c ****     if (high != NULL)
  35              		.loc 1 31 5 view .LVU1
  36              		.loc 1 31 8 is_stmt 0 view .LVU2
  37 0000 08B1     		cbz	r0, .L1
  32:algorithm/AHRS_middleware.c ****     {
  33:algorithm/AHRS_middleware.c ****         *high = 0.0f;
  38              		.loc 1 33 9 is_stmt 1 view .LVU3
  39              		.loc 1 33 15 is_stmt 0 view .LVU4
  40 0002 0022     		movs	r2, #0
  41 0004 0260     		str	r2, [r0]	@ float
  42              	.L1:
  34:algorithm/AHRS_middleware.c ****     }
  35:algorithm/AHRS_middleware.c **** }
  43              		.loc 1 35 1 view .LVU5
  44 0006 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE163:
  48              		.section	.text.AHRS_get_latitude,"ax",%progbits
  49              		.align	1
  50              		.global	AHRS_get_latitude
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  55              	AHRS_get_latitude:
  56              	.LVL1:
  57              	.LFB164:
  36:algorithm/AHRS_middleware.c **** 
  37:algorithm/AHRS_middleware.c **** /**
  38:algorithm/AHRS_middleware.c ****  * @brief          用于获取当前纬度
  39:algorithm/AHRS_middleware.c ****  * @author         RM
  40:algorithm/AHRS_middleware.c ****  * @param[in]      纬度的指针，fp32
  41:algorithm/AHRS_middleware.c ****  * @retval         返回空
  42:algorithm/AHRS_middleware.c ****  */
  43:algorithm/AHRS_middleware.c **** 
  44:algorithm/AHRS_middleware.c **** void AHRS_get_latitude(fp32* latitude)
  45:algorithm/AHRS_middleware.c **** {
  58              		.loc 1 45 1 is_stmt 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  46:algorithm/AHRS_middleware.c ****     if (latitude != NULL)
  63              		.loc 1 46 5 view .LVU7
  64              		.loc 1 46 8 is_stmt 0 view .LVU8
  65 0000 08B1     		cbz	r0, .L3
  47:algorithm/AHRS_middleware.c ****     {
  48:algorithm/AHRS_middleware.c ****         *latitude = 22.0f;
  66              		.loc 1 48 9 is_stmt 1 view .LVU9
  67              		.loc 1 48 19 is_stmt 0 view .LVU10
  68 0002 014A     		ldr	r2, .L5
  69 0004 0260     		str	r2, [r0]	@ float
ARM GAS  /tmp/cc3Ew2Em.s 			page 3


  70              	.L3:
  49:algorithm/AHRS_middleware.c ****     }
  50:algorithm/AHRS_middleware.c **** }
  71              		.loc 1 50 1 view .LVU11
  72 0006 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 0008 0000B041 		.word	1102053376
  77              		.cfi_endproc
  78              	.LFE164:
  80              		.section	.text.AHRS_invSqrt,"ax",%progbits
  81              		.align	1
  82              		.global	AHRS_invSqrt
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  87              	AHRS_invSqrt:
  88              	.LVL2:
  89              	.LFB165:
  51:algorithm/AHRS_middleware.c **** 
  52:algorithm/AHRS_middleware.c **** /**
  53:algorithm/AHRS_middleware.c ****  * @brief          快速开方函数，
  54:algorithm/AHRS_middleware.c ****  * @author         RM
  55:algorithm/AHRS_middleware.c ****  * @param[in]      输入需要开方的浮点数，fp32
  56:algorithm/AHRS_middleware.c ****  * @retval         返回1/sqrt 开方后的倒数
  57:algorithm/AHRS_middleware.c ****  */
  58:algorithm/AHRS_middleware.c **** 
  59:algorithm/AHRS_middleware.c **** fp32 AHRS_invSqrt(fp32 num)
  60:algorithm/AHRS_middleware.c **** {
  90              		.loc 1 60 1 is_stmt 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		.loc 1 60 1 is_stmt 0 view .LVU13
  95 0000 08B5     		push	{r3, lr}
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 3, -8
  99              		.cfi_offset 14, -4
  61:algorithm/AHRS_middleware.c ****     return 1/sqrtf(num);
 100              		.loc 1 61 5 is_stmt 1 view .LVU14
 101              		.loc 1 61 14 is_stmt 0 view .LVU15
 102 0002 FFF7FEFF 		bl	sqrtf
 103              	.LVL3:
  62:algorithm/AHRS_middleware.c **** 
  63:algorithm/AHRS_middleware.c **** //    fp32 halfnum = 0.5f * num;
  64:algorithm/AHRS_middleware.c **** //    fp32 y = num;
  65:algorithm/AHRS_middleware.c **** //    long i = *(long*)&y;
  66:algorithm/AHRS_middleware.c **** //    i = 0x5f3759df - (i >> 1);
  67:algorithm/AHRS_middleware.c **** //    y = *(fp32*)&i;
  68:algorithm/AHRS_middleware.c **** //    y = y * (1.5f - (halfnum * y * y));
  69:algorithm/AHRS_middleware.c **** //    y = y * (1.5f - (halfnum * y * y));
  70:algorithm/AHRS_middleware.c **** //    return y;
  71:algorithm/AHRS_middleware.c **** }
 104              		.loc 1 71 1 view .LVU16
 105 0006 F7EE007A 		vmov.f32	s15, #1.0e+0
ARM GAS  /tmp/cc3Ew2Em.s 			page 4


 106 000a 87EE800A 		vdiv.f32	s0, s15, s0
 107 000e 08BD     		pop	{r3, pc}
 108              		.cfi_endproc
 109              	.LFE165:
 111              		.section	.text.AHRS_sinf,"ax",%progbits
 112              		.align	1
 113              		.global	AHRS_sinf
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	AHRS_sinf:
 119              	.LVL4:
 120              	.LFB166:
  72:algorithm/AHRS_middleware.c **** 
  73:algorithm/AHRS_middleware.c **** /**
  74:algorithm/AHRS_middleware.c ****  * @brief          sin函数
  75:algorithm/AHRS_middleware.c ****  * @author         RM
  76:algorithm/AHRS_middleware.c ****  * @param[in]      角度 单位 rad
  77:algorithm/AHRS_middleware.c ****  * @retval         返回对应角度的sin值
  78:algorithm/AHRS_middleware.c ****  */
  79:algorithm/AHRS_middleware.c **** 
  80:algorithm/AHRS_middleware.c **** fp32 AHRS_sinf(fp32 angle)
  81:algorithm/AHRS_middleware.c **** {
 121              		.loc 1 81 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		.loc 1 81 1 is_stmt 0 view .LVU18
 126 0000 08B5     		push	{r3, lr}
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 3, -8
 130              		.cfi_offset 14, -4
  82:algorithm/AHRS_middleware.c ****     return arm_sin_f32(angle);
 131              		.loc 1 82 5 is_stmt 1 view .LVU19
 132              		.loc 1 82 12 is_stmt 0 view .LVU20
 133 0002 FFF7FEFF 		bl	arm_sin_f32
 134              	.LVL5:
  83:algorithm/AHRS_middleware.c **** }
 135              		.loc 1 83 1 view .LVU21
 136 0006 08BD     		pop	{r3, pc}
 137              		.cfi_endproc
 138              	.LFE166:
 140              		.section	.text.AHRS_cosf,"ax",%progbits
 141              		.align	1
 142              		.global	AHRS_cosf
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	AHRS_cosf:
 148              	.LVL6:
 149              	.LFB167:
  84:algorithm/AHRS_middleware.c **** /**
  85:algorithm/AHRS_middleware.c ****  * @brief          cos函数
  86:algorithm/AHRS_middleware.c ****  * @author         RM
  87:algorithm/AHRS_middleware.c ****  * @param[in]      角度 单位 rad
  88:algorithm/AHRS_middleware.c ****  * @retval         返回对应角度的cos值
ARM GAS  /tmp/cc3Ew2Em.s 			page 5


  89:algorithm/AHRS_middleware.c ****  */
  90:algorithm/AHRS_middleware.c **** 
  91:algorithm/AHRS_middleware.c **** fp32 AHRS_cosf(fp32 angle)
  92:algorithm/AHRS_middleware.c **** {
 150              		.loc 1 92 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 92 1 is_stmt 0 view .LVU23
 155 0000 08B5     		push	{r3, lr}
 156              	.LCFI2:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 3, -8
 159              		.cfi_offset 14, -4
  93:algorithm/AHRS_middleware.c ****     return arm_cos_f32(angle);
 160              		.loc 1 93 5 is_stmt 1 view .LVU24
 161              		.loc 1 93 12 is_stmt 0 view .LVU25
 162 0002 FFF7FEFF 		bl	arm_cos_f32
 163              	.LVL7:
  94:algorithm/AHRS_middleware.c **** }
 164              		.loc 1 94 1 view .LVU26
 165 0006 08BD     		pop	{r3, pc}
 166              		.cfi_endproc
 167              	.LFE167:
 169              		.section	.text.AHRS_tanf,"ax",%progbits
 170              		.align	1
 171              		.global	AHRS_tanf
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 176              	AHRS_tanf:
 177              	.LVL8:
 178              	.LFB168:
  95:algorithm/AHRS_middleware.c **** 
  96:algorithm/AHRS_middleware.c **** /**
  97:algorithm/AHRS_middleware.c ****  * @brief          tan函数
  98:algorithm/AHRS_middleware.c ****  * @author         RM
  99:algorithm/AHRS_middleware.c ****  * @param[in]      角度 单位 rad
 100:algorithm/AHRS_middleware.c ****  * @retval         返回对应角度的tan值
 101:algorithm/AHRS_middleware.c ****  */
 102:algorithm/AHRS_middleware.c **** 
 103:algorithm/AHRS_middleware.c **** fp32 AHRS_tanf(fp32 angle)
 104:algorithm/AHRS_middleware.c **** {
 179              		.loc 1 104 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		.loc 1 104 1 is_stmt 0 view .LVU28
 184 0000 08B5     		push	{r3, lr}
 185              	.LCFI3:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
 105:algorithm/AHRS_middleware.c ****     return tanf(angle);
 189              		.loc 1 105 5 is_stmt 1 view .LVU29
 190              		.loc 1 105 12 is_stmt 0 view .LVU30
 191 0002 FFF7FEFF 		bl	tanf
ARM GAS  /tmp/cc3Ew2Em.s 			page 6


 192              	.LVL9:
 106:algorithm/AHRS_middleware.c **** }
 193              		.loc 1 106 1 view .LVU31
 194 0006 08BD     		pop	{r3, pc}
 195              		.cfi_endproc
 196              	.LFE168:
 198              		.section	.text.AHRS_asinf,"ax",%progbits
 199              		.align	1
 200              		.global	AHRS_asinf
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	AHRS_asinf:
 206              	.LVL10:
 207              	.LFB169:
 107:algorithm/AHRS_middleware.c **** /**
 108:algorithm/AHRS_middleware.c ****  * @brief          用于32位浮点数的反三角函数 asin函数
 109:algorithm/AHRS_middleware.c ****  * @author         RM
 110:algorithm/AHRS_middleware.c ****  * @param[in]      输入sin值，最大1.0f，最小-1.0f
 111:algorithm/AHRS_middleware.c ****  * @retval         返回角度 单位弧度
 112:algorithm/AHRS_middleware.c ****  */
 113:algorithm/AHRS_middleware.c **** 
 114:algorithm/AHRS_middleware.c **** fp32 AHRS_asinf(fp32 sin)
 115:algorithm/AHRS_middleware.c **** {
 208              		.loc 1 115 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		.loc 1 115 1 is_stmt 0 view .LVU33
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI4:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 116:algorithm/AHRS_middleware.c **** 
 117:algorithm/AHRS_middleware.c ****     return asinf(sin);
 218              		.loc 1 117 5 is_stmt 1 view .LVU34
 219              		.loc 1 117 12 is_stmt 0 view .LVU35
 220 0002 FFF7FEFF 		bl	asinf
 221              	.LVL11:
 118:algorithm/AHRS_middleware.c **** }
 222              		.loc 1 118 1 view .LVU36
 223 0006 08BD     		pop	{r3, pc}
 224              		.cfi_endproc
 225              	.LFE169:
 227              		.section	.text.AHRS_acosf,"ax",%progbits
 228              		.align	1
 229              		.global	AHRS_acosf
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 234              	AHRS_acosf:
 235              	.LVL12:
 236              	.LFB170:
 119:algorithm/AHRS_middleware.c **** 
 120:algorithm/AHRS_middleware.c **** /**
 121:algorithm/AHRS_middleware.c ****  * @brief          反三角函数acos函数
ARM GAS  /tmp/cc3Ew2Em.s 			page 7


 122:algorithm/AHRS_middleware.c ****  * @author         RM
 123:algorithm/AHRS_middleware.c ****  * @param[in]      输入cos值，最大1.0f，最小-1.0f
 124:algorithm/AHRS_middleware.c ****  * @retval         返回对应的角度 单位弧度
 125:algorithm/AHRS_middleware.c ****  */
 126:algorithm/AHRS_middleware.c **** 
 127:algorithm/AHRS_middleware.c **** fp32 AHRS_acosf(fp32 cos)
 128:algorithm/AHRS_middleware.c **** {
 237              		.loc 1 128 1 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		.loc 1 128 1 is_stmt 0 view .LVU38
 242 0000 08B5     		push	{r3, lr}
 243              	.LCFI5:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 3, -8
 246              		.cfi_offset 14, -4
 129:algorithm/AHRS_middleware.c **** 
 130:algorithm/AHRS_middleware.c ****     return acosf(cos);
 247              		.loc 1 130 5 is_stmt 1 view .LVU39
 248              		.loc 1 130 12 is_stmt 0 view .LVU40
 249 0002 FFF7FEFF 		bl	acosf
 250              	.LVL13:
 131:algorithm/AHRS_middleware.c **** }
 251              		.loc 1 131 1 view .LVU41
 252 0006 08BD     		pop	{r3, pc}
 253              		.cfi_endproc
 254              	.LFE170:
 256              		.section	.text.AHRS_atan2f,"ax",%progbits
 257              		.align	1
 258              		.global	AHRS_atan2f
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	AHRS_atan2f:
 264              	.LVL14:
 265              	.LFB171:
 132:algorithm/AHRS_middleware.c **** 
 133:algorithm/AHRS_middleware.c **** /**
 134:algorithm/AHRS_middleware.c ****  * @brief          反三角函数atan函数
 135:algorithm/AHRS_middleware.c ****  * @author         RM
 136:algorithm/AHRS_middleware.c ****  * @param[in]      输入tan值中的y值 最大正无穷，最小负无穷
 137:algorithm/AHRS_middleware.c ****  * @param[in]      输入tan值中的x值 最大正无穷，最小负无穷
 138:algorithm/AHRS_middleware.c ****  * @retval         返回对应的角度 单位弧度
 139:algorithm/AHRS_middleware.c ****  */
 140:algorithm/AHRS_middleware.c **** 
 141:algorithm/AHRS_middleware.c **** fp32 AHRS_atan2f(fp32 y, fp32 x)
 142:algorithm/AHRS_middleware.c **** {
 266              		.loc 1 142 1 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		.loc 1 142 1 is_stmt 0 view .LVU43
 271 0000 08B5     		push	{r3, lr}
 272              	.LCFI6:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 3, -8
ARM GAS  /tmp/cc3Ew2Em.s 			page 8


 275              		.cfi_offset 14, -4
 143:algorithm/AHRS_middleware.c ****     return atan2f(y, x);
 276              		.loc 1 143 5 is_stmt 1 view .LVU44
 277              		.loc 1 143 12 is_stmt 0 view .LVU45
 278 0002 FFF7FEFF 		bl	atan2f
 279              	.LVL15:
 144:algorithm/AHRS_middleware.c **** }
 280              		.loc 1 144 1 view .LVU46
 281 0006 08BD     		pop	{r3, pc}
 282              		.cfi_endproc
 283              	.LFE171:
 285              		.text
 286              	.Letext0:
 287              		.file 2 "/home/tianbot/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/math.h"
 288              		.file 3 "algorithm/Include/arm_math.h"
 289              		.file 4 "algorithm/AHRS_middleware.h"
ARM GAS  /tmp/cc3Ew2Em.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 AHRS_middleware.c
     /tmp/cc3Ew2Em.s:20     .text.AHRS_get_height:0000000000000000 $t
     /tmp/cc3Ew2Em.s:26     .text.AHRS_get_height:0000000000000000 AHRS_get_height
     /tmp/cc3Ew2Em.s:49     .text.AHRS_get_latitude:0000000000000000 $t
     /tmp/cc3Ew2Em.s:55     .text.AHRS_get_latitude:0000000000000000 AHRS_get_latitude
     /tmp/cc3Ew2Em.s:76     .text.AHRS_get_latitude:0000000000000008 $d
     /tmp/cc3Ew2Em.s:81     .text.AHRS_invSqrt:0000000000000000 $t
     /tmp/cc3Ew2Em.s:87     .text.AHRS_invSqrt:0000000000000000 AHRS_invSqrt
     /tmp/cc3Ew2Em.s:112    .text.AHRS_sinf:0000000000000000 $t
     /tmp/cc3Ew2Em.s:118    .text.AHRS_sinf:0000000000000000 AHRS_sinf
     /tmp/cc3Ew2Em.s:141    .text.AHRS_cosf:0000000000000000 $t
     /tmp/cc3Ew2Em.s:147    .text.AHRS_cosf:0000000000000000 AHRS_cosf
     /tmp/cc3Ew2Em.s:170    .text.AHRS_tanf:0000000000000000 $t
     /tmp/cc3Ew2Em.s:176    .text.AHRS_tanf:0000000000000000 AHRS_tanf
     /tmp/cc3Ew2Em.s:199    .text.AHRS_asinf:0000000000000000 $t
     /tmp/cc3Ew2Em.s:205    .text.AHRS_asinf:0000000000000000 AHRS_asinf
     /tmp/cc3Ew2Em.s:228    .text.AHRS_acosf:0000000000000000 $t
     /tmp/cc3Ew2Em.s:234    .text.AHRS_acosf:0000000000000000 AHRS_acosf
     /tmp/cc3Ew2Em.s:257    .text.AHRS_atan2f:0000000000000000 $t
     /tmp/cc3Ew2Em.s:263    .text.AHRS_atan2f:0000000000000000 AHRS_atan2f

UNDEFINED SYMBOLS
sqrtf
arm_sin_f32
arm_cos_f32
tanf
asinf
acosf
atan2f
